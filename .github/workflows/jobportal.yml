name: Build and Deploy React App to IIS

on:
  push:
    branches:
      - Stage  # Trigger the action when changes are pushed to the 'stage' branch

jobs:
  build:
    runs-on: ubuntu-latest  # Specify the runner environment

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build React app
      - name: Build React app
        run: CI=false npm run build

      # Step 5: List the build directory contents (for debugging)
      - name: List build directory contents
        run: ls -al ./build

      # Step 6: Upload build artifact
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Deploy only after the build step completes successfully

    steps:
      # Step 1: Download build artifacts from the build job
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      # Step 2: List the contents of the downloaded directory
      - name: List downloaded directory contents
        run: ls -al /home/runner/work/jobportal/jobportal/

      # Step 3: Check if the build files are present (they should be directly in /home/runner/work/jobportal/jobportal/)
      - name: Check if build files are present
        run: |
          if [ -f "/home/runner/work/jobportal/jobportal/index.html" ]; then
            echo "Build files are present."
          else
            echo "Build files are missing."
            exit 1  # Fail the deployment if build files are not found
          fi

      # Step 4: Deploy to IIS via FTP
      - name: Deploy to IIS via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.0.0
        with:
          server: ${{ secrets.FTP_SERVER }}  # Use the FTP server address stored in GitHub Secrets
          username: ${{ secrets.FTP_USERNAME }}  # Use the FTP username stored in GitHub Secrets
          password: ${{ secrets.FTP_PASSWORD }}  # Use the FTP password stored in GitHub Secrets
          local-dir: /home/runner/work/jobportal/jobportal/  # Adjusted path to point directly to the root folder
          server-dir: /  # Ensure this is a folder path and ends with /
          dry-run: false  # Set to false to perform actual deployment
